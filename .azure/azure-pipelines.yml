variables:
  phpVersion: 7.2
  COMPOSER_CACHE_DIR: $(Pipeline.Workspace)/.composer

# specific path build
trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - docs/*
    - README.md

pr:
  branches:
    include:
    - master
  paths:
    exclude:
    - docs/*
    - docs/README.md

pool:
  vmImage: 'ubuntu-18.04'

resources: 
    containers: 
    - container: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
      env:
        discovery.type: single-node
      ports:
      - 9200:9200
stages:
- stage: build
  jobs:
  - job: Lint
    displayName: Lint
    steps:
    - template: templates/magento-auth.yml
    - template: templates/composer-version.yml
    - template: templates/composer-cache.yml
    - template: templates/composer-install.yml
    - script: composer run-script lint
      displayName: Lint
  - job: Unit_Test
    displayName: Unit Test
    strategy:
      matrix:
        php72:
          phpVersion: 7.2
        php73:
          phpVersion: 7.3
        php74:
          phpVersion: 7.3
    steps:
    - template: templates/setup-php.yml
    - template: templates/composer-version.yml
    - template: templates/composer-cache.yml
      parameters:
        key: '"$(phpVersion)"'
    - template: templates/magento-auth.yml
    - template: templates/composer-install.yml
    - script: composer run-script unit-test
      displayName: Unit Test
  - job: Integration_Test
    displayName: Integration Test
    strategy:
      matrix:
        php73_magento2.4:
          phpVersion: 7.3
          magentoTag: 2.4
        php74_magento2.4:
          phpVersion: 7.4
          magentoTag: 2.4
    services:
      elasticsearch: elasticsearch
    steps:
    - template: templates/setup-php.yml
    - template: templates/composer-version.yml
    - template: templates/composer-cache.yml
      parameters:
        key: '"magento2" | "$(phpVersion)" | "$(magentoTag)"'
    - script: bash ./ci/scripts/wait-for-elasticsearch.sh http://localhost:9200/_cat/health?h=status
      displayName: Waiting for Elasticsearch
    - template: templates/magento-auth.yml
    - template: templates/integration-setup.yml
    - script: |
        cd $(pwd)/../magento2/dev/tests/integration
        ../../../vendor/bin/phpunit --testsuite "Graycore_Magento2Cors"
      displayName: Run Integration Tests
- stage: prerelease
  displayName: Pre-release Verification
  dependsOn: []
  variables: 
    magedir: "../magento2"
    repository: https://github.com/graycoreio/magento2-cors
  jobs: 
  - job: package_install_test
    displayName: Package Install Test
    strategy:
      matrix:
        php72_magento2.3:
          phpVersion: 7.2
          magentoTag: 2.3.5
        php74_magento2.4:
          phpVersion: 7.4
          magentoTag: 2.4.0
    steps:
    - template: templates/setup-php.yml
    - template: templates/composer-cache.yml
      parameters:
        key: '"magento2" | "$(phpVersion)" | "$(magentoTag)"'
    - template: templates/composer-version.yml
    - template: templates/magento-auth.yml
    
    - script: composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=$(magentoTag) $(magedir) --no-install
      displayName: Create Magento $(magentoTag) Project 
    
    - script: composer config repositories.local path $(Build.SourcesDirectory) 
      workingDirectory: $(magedir)
      displayName: Add Github Repo for Testing
    
    - script: composer require graycore/magento2-cors "@dev" --no-update && composer install --dry-run
      workingDirectory: $(magedir)
      displayName: Require and attempt install